@model Umbraco.Web.Models.ContentEditing.PrintServiceOverviewResponse
@using Umbraco.Web.Models.ContentEditing;
@{
    var culture = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
    dynamic aggregates = Model.Aggregates;

}


<div class="text-center">
    <div class="text-3xl font-semibold">BÁO CÁO TỔNG QUAN DỊCH VỤ</div>
    <div>
        @((Model.DateFrom.HasValue? "Từ ngày " + Model.DateFrom.Value.ToString("dd/MM/yyyy") : "") +
            (Model.DateFrom.HasValue ? " Đến ngày " + Model.DateTo.Value.ToString("dd/MM/yyyy") : ""))
    </div>
</div>

<div class="mt-3">
    <table class="table table-sm table-bordered mb-5 border-top-0">
        <tbody>

            <tr>
                <td width="120"><strong>Ngày tạo</strong></td>
                <td width="150"><strong>Dịch vụ</strong></td>
                <td width="150"><strong>Phiếu điều trị</strong></td>
                <td width="150"><strong>Khách hàng</strong></td>
                <td width="120" class="text-right"><strong>Số lượng</strong></td>
                <td width="120"><strong>Bác sĩ</strong></td>
                <td width="120" class="text-right"><strong>Thành tiền</strong></td>
                <td width="120" class="text-right"><strong>Thanh toán</strong></td>
                <td width="120" class="text-right"><strong>Còn lại</strong></td>
                <td width="120"><strong>Trạng thái</strong></td>
            </tr>
            @foreach (var item in Model.data)
            {
                <tr>
                    <td width="120">@(!item.Date.HasValue ? "" : item.Date.Value.ToString("dd/MM/yyyy"))</td>
                    <td width="150">@item.Name</td>
                    <td width="150">@item.OrderName</td>
                    <td width="150">@item.OrderPartnerName</td>
                    <td width="120" class="text-right">@string.Format(culture, "{0:n0}", item.ProductUOMQty)</td>
                    <td width="120">@item.EmployeeName</td>
                    <td width="120" class="text-right">@string.Format(culture, "{0:n0}", item.PriceSubTotal)</td>
                    <td width="120" class="text-right">@string.Format(culture, "{0:n0}", item.AmountInvoiced)</td>
                    <td width="120" class="text-right">@string.Format(culture, "{0:n0}", item.AmountResidual)</td>
                    <td width="120">@item.StateDisplay</td>

                </tr>
            }

            <tr>
                <td colspan="6" class="font-semibold">Tổng</td>
                <td class="text-right font-semibold">@(string.Format(culture, "{0:N0}", aggregates.PriceSubTotal.sum))</td>
                <td class="text-right font-semibold">@(string.Format(culture, "{0:N0}", aggregates.AmountInvoiced.sum))</td>
                <td class="text-right font-semibold">@(string.Format(culture, "{0:N0}", (aggregates.PriceSubTotal.sum - aggregates.AmountInvoiced.sum)))</td>
                <td></td>
            </tr>
        </tbody>
    </table>

    <div class="clearfix"></div>
</div>

<div class="d-flex mt-2">
    <div class="col-6">

    </div>
    <div class="col-6">
        <div class="text-center">
            <div>Ngày @DateTime.Now.Day, tháng @DateTime.Now.Month, năm @DateTime.Now.Year.</div>
            <span class="font-semibold">Người lập báo cáo</span> <br />
            <i>(Ký và ghi họ tên)</i> <br />
            <span></span> <br />
            <span></span> <br />
            <span></span> <br />
            <span class="font-semibold">@(Model.User != null && !string.IsNullOrEmpty(Model.User.Name)? Model.User.Name.ToUpper() : "")</span>
        </div>
    </div>
</div>
